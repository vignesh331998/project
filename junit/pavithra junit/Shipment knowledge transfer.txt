import static org.hamcrest.CoreMatchers.*;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertThat;

import java.util.ArrayList;
import java.util.List;

import org.junit.*;
import org.junit.rules.ExpectedException;

public class ShipmentBOJUnit {
	ShipmentBO shipmentBO;
	ShipmentDAO shipmentDAO = new ShipmentDAO();
	
	@Before
	public void Init()
	{
		shipmentBO=new ShipmentBO();
	}
	
@Test
	public void testUpdateShipment() throws Exception {
		//fill the code
		
	List<Shipment> sl=ShipmentDAO.shipments;
		shipmentBO.updateShipment(1, 13, shipmentDAO);
		
			assertThat(sl.get(0).getShipmentStatus().getName(),is("Delayed"));
	}
	

	@Test
	public void testUpdateShipment_failure() {
		//fill the code
		
		try {
			shipmentBO.updateShipment(1, 14, shipmentDAO);
		
		}catch(Exception e){
			assertEquals("Shipment for the given id is not found",e.getMessage());
		}
	}
	
	@Test
	public void testAddShipment() throws Exception {
		//fill the code
		
		shipmentBO.addShipment(new Shipment(100 , "Shipment100", "Chennai",
				"CBE",  2321.09, new ShipmentStatus(12, "pending",123)), 12, shipmentDAO);
		
		List<Shipment> sl=ShipmentDAO.shipments;
		assertThat(sl.get(2).getId(),is(100));
	    assertThat(sl.size(),is(3));
	    
	    shipmentBO.addShipment(new Shipment(103 , "Shipment", "test1",
				"test2",  2321, new ShipmentStatus(12, "delayed",123)), 12, shipmentDAO);
	   	 assertEquals(4,sl.size());
	    
	}
	
	
	
	@Test
	public void testAddShipment_failure()  {
		//fill the code
		
		try {
			shipmentBO.addShipment(new Shipment(100 , "Shipment100", "Chennai",
		
				"CBE",  100.0, new ShipmentStatus(14, "testing",123)), 14, shipmentDAO);
		
		}catch(Exception e){
			assertEquals("Shipment for the given id is not found",e.getMessage());
		}
		
		
	}
}
